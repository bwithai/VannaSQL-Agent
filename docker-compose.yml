version: '3.8'

services:
  # MySQL
  mysql:
    image: mysql:8.0
    container_name: vannasql-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: cfms
      MYSQL_USER: newuser
      MYSQL_PASSWORD: newpassword
    ports:
      - "3307:3306"  # Different port to avoid conflict with host MySQL
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql_init:/docker-entrypoint-initdb.d  # For initialization scripts
    restart: unless-stopped
    profiles:
      - database  # Use profile to make this optional


  # VannaSQL Agent
  vannasql-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vannasql-agent-dev
    ports:
      - "8000:8000"  # FastAPI/Uvicorn
      - "8080:8080"  # Alternative web port
      - "5000:5000"  # Flask web interface
    volumes:
      # Mount source code for development
      - .:/app
      # Mount RAG-Layer for persistent ChromaDB storage
      - ./RAG-Layer:/app/RAG-Layer
      # Exclude dep_pkg from mounting (using Docker's own dependencies)
      - /app/dep_pkg
      - ./chroma:/root/.cache/chroma
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development
      # Database connection settings
      - DB_HOST=host.docker.internal  # For connecting to host MySQL
      - DB_PORT=3306
      - DB_NAME=cfms
      - DB_USER=newuser
      - DB_PASSWORD=newpassword
      # Ollama settings (connecting to host Ollama)
      - OLLAMA_HOST=http://host.docker.internal:11434
      - OLLAMA_MODEL=phi4-mini:latest
    # Allow container to access host services (MySQL, Ollama)
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # Keep container running for development
    stdin_open: true
    tty: true
    # Restart policy
    restart: unless-stopped
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s



volumes:
  mysql_data:
    driver: local